---
import { getI18N } from "@/i18n";
import ArrowUpRight from "../icons/ArrowUpRight.astro";
import NewBadge from "./NewBadge.astro";

//Para cambiar idioma de textos
const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });

const {
  id = "",
  url = "",
  href,
  title = "Título predeterminado",
  subtitle = "Subtítulo predeterminado",
  imageSrc = "",
  imageAlt = "Icono predeterminado",
  isNew = false, // Nueva prop para controlar el badge
  tasks = [],
} = Astro.props;

const Tag = href ? "a" : "div";
---

<a
  id={id}
  href={href}
  data-section={id}
  class="relative p-4 rounded-lg flex flex-col border-[1px]
   border-hub-border
   dark:border-hub-border-dark
   hover:drop-shadow-md
   hover:bg-hub-background-nav
   dark:bg-hub-background-nav-dark
   group"
  target={href ? "_blank" : undefined}
  rel={href ? "noopener noreferrer" : undefined}
>
  <!-- Badge de "New" -->
  {
    isNew && (
      <div class=" animate-pulse absolute top-0 right-2 transform translate-x-1/2 -translate-y-1/2 bg-sky-500 text-white text-xs font-semibold px-2 py-0.5 rounded-full shadow-md z-10">{i18n.PROJECTS.BADGE.NEW}</div>
    )
  }

  <div class="flex items-center justify-between">
    <!-- Contenedor izquierdo -->
    <div class="flex items-center">
      <div
        class="rounded-lg border-[1px] size-9 flex items-center justify-center
       border-hub-border
        dark:border-hub-border-dark
      dark:bg-hub-background
      overflow-hidden"
      >
        <img src={imageSrc} alt={imageAlt} class="w-full h-full object-cover" />
      </div>

      <div class="pl-4 flex flex-col justify-start">
        <h2 class="font-medium text-base text-hub-title dark:text-hub-title-dark">
          {title}
        </h2>
        <small class="text-hub-subtitle dark:text-hub-subtitle-dark text-xs"
          >{subtitle}</small
        >
      </div>
    </div>

    <!-- Icono derecho -->
    {
      href && (
        <ArrowUpRight class="size-6 text-hub-subtitle dark:text-hub-subtitle-dark transition-transform duration-300 ease-in-out group-hover:rotate-45" />
      )
    }
  </div>
  {
    tasks.length > 0 && (
      <ul class="list-disc list-inside mt-2 space-y-1 text-sm text-hub-light-gray dark:text-hub-dark-gray">
        {tasks.map((task) => (
          <li>{task}</li>
        ))}
      </ul>
    )
  }
</a>
